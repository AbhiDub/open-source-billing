$("#invoice_model").modal('close');
$('.editInvoice .modal-content').html("<%= escape_javascript render partial: 'invoice_form_popup', locals: {invoice: @invoice}  %>");
$(".editInvoice").modal('open');
$('select').material_select();

$('#invoice_date_picker').pickadate({
    format: DateFormats.format(),
    formatSubmit: DateFormats.format(),
    onSet: function(context) {
        var value = this.get('value');
        $("#invoice_date").html(value);
        $("#invoice_invoice_date").val(value);
    }
});

$('#invoice_due_date_picker').pickadate({
    format: DateFormats.format(),
    formatSubmit: DateFormats.format(),
    onSet: function(context) {
        var value = this.get('value');
        $("#invoice_due_date_text").html(value);
        $("#invoice_due_date").val(value);
    }
});
var applyTax;

applyTax = function(line_total, elem) {
    var discount_amount, tax1, tax2, total_tax;
    tax1 = elem.parents("tr").find("select.tax1 option:selected").attr('data-tax_1');
    tax2 = elem.parents("tr").find("select.tax2 option:selected").attr('data-tax_2');
    if ((tax1 == null) || tax1 === "") {
        tax1 = 0;
    }
    if ((tax2 == null) || tax2 === "") {
        tax2 = 0;
    }
    if (line_total === 0) {
        tax1 = tax2 = 0;
    }
    discount_amount = applyDiscount(line_total);
    total_tax = parseFloat(tax1) + parseFloat(tax2);
    return (line_total - discount_amount) * (parseFloat(total_tax) / 100.0);
};


var applyDiscount;

applyDiscount = function(subtotal) {
    var discount_percentage, discount_type;
    discount_percentage = jQuery("#invoice_discount_percentage").val() || jQuery("#recurring_profile_discount_percentage").val();
    discount_type = jQuery("select#discount_type").val();
    if ((discount_percentage == null) || discount_percentage === "") {
        discount_percentage = 0;
    }
    if (discount_type === "%") {
        return subtotal * (parseFloat(discount_percentage) / 100.0);
    } else {
        return discount_percentage;
    }
};

var updateInvoiceTotal;

updateInvoiceTotal = function() {
    var discount_amount, tax_amount, total;
    total = 0;
    tax_amount = 0;
    discount_amount = 0;
    jQuery("table.invoice_grid_fields tr:visible .line_total").each(function() {
        var line_total;
        line_total = parseFloat(jQuery(this).text());
        total += line_total;
        jQuery("#invoice_sub_total, #recurring_profile_sub_total").val(total.toFixed(2));
        jQuery("#invoice_sub_total_lbl").text(total.toFixed(2));
        jQuery("#invoice_invoice_total, #recurring_profile_invoice_total").val(total.toFixed(2));
        jQuery("#invoice_total_lbl").text(total.toFixed(2));
        tax_amount += applyTax(line_total, jQuery(this));
    });
    discount_amount = applyDiscount(total);

    jQuery("#tax_amount_lbl").text(tax_amount.toFixed(2));
    jQuery("#invoice_tax_amount, #recurring_profile_tax_amount").val(tax_amount.toFixed(2));
    var total_balance;

    jQuery("#invoice_discount_amount, #recurring_profile_discount_amount").val((discount_amount * -1).toFixed(2));

    total_balance = parseFloat(jQuery("#invoice_total_lbl").text() - discount_amount) + tax_amount;

    jQuery("#invoice_invoice_total, #recurring_profile_invoice_total").val(total_balance.toFixed(2));

    jQuery("#invoice_total_lbl").text(total_balance.toFixed(2));

    jQuery("#invoice_total_lbl").formatCurrency({
        symbol: window.currency_symbol
    });

    //window.taxByCategory();
};



var updateLineTotal;

updateLineTotal = function(elem) {
    var container, cost, line_total, qty;
    container = elem.parents("tr.fields");
    cost = jQuery(container).find("input.cost").val();
    qty = jQuery(container).find("input.qty").val();
    if ((cost == null) || cost === "" || !jQuery.isNumeric(cost)) {
        cost = 0;
    }
    if ((qty == null) || qty === "" || !jQuery.isNumeric(qty)) {
        qty = 0;
    }
    line_total = (parseFloat(cost) * parseFloat(qty)).toFixed(2);
    return jQuery(container).find(".line_total").text(line_total);
};

var clearLineTotal;

clearLineTotal = function(elem) {
    var container;
    container = elem.parents("tr.fields");
    container.find("input.description").val('');
    container.find("input.cost").val('');
    container.find("input.qty").val('');
    container.find("select.tax1,select.tax2").val('').trigger("liszt:updated");
    updateLineTotal(elem);
    return updateInvoiceTotal();
};

var change_invoice_item;
change_invoice_item = function(){
    jQuery(".invoice_grid_fields select.items_list").on("change", function() {
        var elem;
        elem = jQuery(this);
        if (elem.val() === "") {
            clearLineTotal(elem);
            return false;
        } else {
            // addLineItemRow(elem);
            return jQuery.ajax('/items/load_item_data', {
                type: 'POST',
                data: "id=" + jQuery(this).val(),
                dataType: 'html',
                error: function(jqXHR, textStatus, errorThrown) {
                    return alert("Error: " + textStatus);
                },
                success: function(data, textStatus, jqXHR) {
                    var container, item;
                    item = JSON.parse(data);
                    container = elem.parents("tr.fields");
                    container.find("input.description").val(item[0]);
                    container.find("td.description").html(item[0]);
                    container.find("input.cost").val(item[1].toFixed(2));
                    container.find("td.cost").html(item[1].toFixed(2));
                    container.find("input.qty").val(item[2]);
                    container.find("td.qty").html(item[2]);
                    container.find("select.tax1,select.tax2").val('');
                    if (item[3] !== 0) {
                        container.find("select.tax1").val(item[3]);
                    }
                    if (item[4] !== 0) {
                        container.find("select.tax2").val(item[4]);
                    }
                    container.find("input.item_name").val(item[5]);
                    updateLineTotal(elem);
                    return  updateInvoiceTotal();
                }
            });
        }
    });
}

change_invoice_item();

jQuery("#invoice_grid_fields tbody").sortable({
    handle: ".sort_icon",
    items: "tr.fields",
    axis: "y"
});

//jQuery("#add_line_item").on("click", function() {
//    var options, tax1, tax2;
//    options = $('.items_list:first').html();
//    $('.items_list:last').html(options).find('option:selected').removeAttr('selected');
//    $('.items_list:last').find('option[data-type = "deleted_item"], option[data-type = "archived_item"], option[data-type = "other_company"], option[data-type = "active_line_item"]').remove();
//    tax1 = $('.tax1:first').html();
//    tax2 = $('.tax2:first').html();
//    $('.tax1:last').html(tax1).find('option:selected').removeAttr('selected');
//    $('.tax2:last').html(tax2).find('option:selected').removeAttr('selected');
//    $('.tax1:last').find('option[data-type = "deleted_tax"], option[data-type = "archived_tax"], option[data-type = "active_line_item_tax"]').remove();
//    return $('.tax2:last').find('option[data-type = "deleted_tax"], option[data-type = "archived_tax"], option[data-type = "active_line_item_tax"]').remove();
//});

jQuery("#invoice_payment_terms_id").unbind('change');

jQuery("#invoice_payment_terms_id").change(function() {
    var number_of_days;
    number_of_days = jQuery("option:selected", this).attr('number_of_days');
    return setDuedate(jQuery("#invoice_invoice_date").val(), number_of_days);
});

var setDuedate;

setDuedate = function(invoice_date, term_days) {
    var invoice_due_date;
    if ((term_days != null) && (invoice_date != null)) {
        invoice_due_date = DateFormats.add_days_in_formated_date(invoice_date, parseInt(term_days));
        $("#invoice_due_date_text").html(invoice_due_date);
        return jQuery("#invoice_due_date").val(invoice_due_date);
    } else {
        return jQuery("#invoice_due_date").val("");
    }
};

jQuery("#invoice_discount_percentage, #recurring_profile_discount_percentage,.qty").keydown(function(e) {
    if (e.keyCode === 109 || e.keyCode === 13) {
        e.preventDefault();
        return false;
    }
});

jQuery("#invoice_discount_percentage, #recurring_profile_discount_percentage, .qty").bind("paste contextmenu", function(e) {
    return e.preventDefault();
});


jQuery("select.tax1, select.tax2").on("change", function() {
    return updateInvoiceTotal();
});


