//if (confirm('Your changes will be discarded by switching company. Are you sure you want to switch company?')) {
//    // Set the session and reload the new invoices page
//    jQuery.get("/application/new_selected_company_name?company_id=" + "<%= params[:company_id] %>", function(response) {
//        jQuery("#current_selected_company").text(response);
//    });
//    setTimeout(function(){location.reload();},1000);
//}

$('.editInvoice .modal-content').html("<%= escape_javascript render partial: 'invoice_form_popup', locals: {invoice: @invoice}  %>");
$(".editInvoice").modal('open');
$('select').material_select();
jQuery("#invoice_invoice_date, #invoice_due_date, .date_picker_class").datepicker();

var updateLineTotal;

updateLineTotal = function(elem) {
    var container, cost, line_total, qty;
    container = elem.parents("tr.fields");
    cost = jQuery(container).find("input.cost").val();
    qty = jQuery(container).find("input.qty").val();
    if ((cost == null) || cost === "" || !jQuery.isNumeric(cost)) {
        cost = 0;
    }
    if ((qty == null) || qty === "" || !jQuery.isNumeric(qty)) {
        qty = 0;
    }
    line_total = (parseFloat(cost) * parseFloat(qty)).toFixed(2);
    return jQuery(container).find(".line_total").text(line_total);
};

jQuery(".invoice_grid_fields select.items_list").on("change", function() {
    var elem;
    elem = jQuery(this);
    if (elem.val() === "") {
        //clearLineTotal(elem);
        return false;
    } else {
        //addLineItemRow(elem);
        return jQuery.ajax('/items/load_item_data', {
            type: 'POST',
            data: "id=" + jQuery(this).val(),
            dataType: 'html',
            error: function(jqXHR, textStatus, errorThrown) {
                return alert("Error: " + textStatus);
            },
            success: function(data, textStatus, jqXHR) {
                var container, item;
                item = JSON.parse(data);
                container = elem.parents("tr.fields");
                container.find("input.description").val(item[0]);
                container.find("td.description").html(item[0]);
                container.find("input.cost").val(item[1].toFixed(2));
                container.find("td.cost").html(item[1].toFixed(2));
                container.find("input.qty").val(item[2]);
                container.find("td.qty").html(item[2]);
                container.find("select.tax1,select.tax2").val('');
                if (item[3] !== 0) {
                    container.find("select.tax1").val(item[3]);
                }
                if (item[4] !== 0) {
                    container.find("select.tax2").val(item[4]);
                }
                container.find("input.item_name").val(item[5]);
                updateLineTotal(elem);
                return //updateInvoiceTotal();
            }
        });
    }
});
